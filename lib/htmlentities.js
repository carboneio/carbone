const entities = [
	{"value":"&", code : "&amp;", hex : "&#38;", desc : "Ampersand"}, 
	{"value":"<", code : "&lt;", hex : "&#60;", desc : "Less-than"}, 
	{"value":">", code : "&gt;", hex : "&#62;", desc : "Greater than"}, 
	{"value":"À", code : "&Agrave;", hex : "&#192;", desc : "Capital a with grave accent"}, 
	{"value":"Á", code : "&Aacute;", hex : "&#193;", desc : "Capital a with acute accent"}, 
	{"value":"Â", code : "&Acirc;", hex : "&#194;", desc : "Capital a with circumflex accent"}, 
	{"value":"Ã", code : "&Atilde;", hex : "&#195;", desc : "Capital a with tilde"}, 
	{"value":"Ä", code : "&Auml;", hex : "&#196;", desc : "Capital a with umlaut"}, 
	{"value":"Å", code : "&Aring;", hex : "&#197;", desc : "Capital a with ring"}, 
	{"value":"Æ", code : "&AElig;", hex : "&#198;", desc : "Capital ae"}, 
	{"value":"Ç", code : "&Ccedil;", hex : "&#199;", desc : "Capital c with cedilla"}, 
	{"value":"È", code : "&Egrave;", hex : "&#200;", desc : "Capital e with grave accent"}, 
	{"value":"É", code : "&Eacute;", hex : "&#201;", desc : "Capital e with acute accent"}, 
	{"value":"Ê", code : "&Ecirc;", hex : "&#202;", desc : "Capital e with circumflex accent"}, 
	{"value":"Ë", code : "&Euml;", hex : "&#203;", desc : "Capital e with umlaut"}, 
	{"value":"Ì", code : "&Igrave;", hex : "&#204;", desc : "Capital i with grave accent"}, 
	{"value":"Í", code : "&Iacute;", hex : "&#205;", desc : "Capital i with accute accent"}, 
	{"value":"Î", code : "&Icirc;", hex : "&#206;", desc : "Capital i with circumflex accent"}, 
	{"value":"Ï", code : "&Iuml;", hex : "&#207;", desc : "Capital i with umlaut"}, 
	{"value":"Ð", code : "&ETH;", hex : "&#208;", desc : "Capital eth (Icelandic)"}, 
	{"value":"Ñ", code : "&Ntilde;", hex : "&#209;", desc : "Capital n with tilde"}, 
	{"value":"Ò", code : "&Ograve;", hex : "&#210;", desc : "Capital o with grave accent"}, 
	{"value":"Ó", code : "&Oacute;", hex : "&#211;", desc : "Capital o with accute accent"}, 
	{"value":"Ô", code : "&Ocirc;", hex : "&#212;", desc : "Capital o with circumflex accent"}, 
	{"value":"Õ", code : "&Otilde;", hex : "&#213;", desc : "Capital o with tilde"}, 
	{"value":"Ö", code : "&Ouml;", hex : "&#214;", desc : "Capital o with umlaut"}, 
	{"value":"Ø", code : "&Oslash;", hex : "&#216;", desc : "Capital o with slash"}, 
	{"value":"Ù", code : "&Ugrave;", hex : "&#217;", desc : "Capital u with grave accent"}, 
	{"value":"Ú", code : "&Uacute;", hex : "&#218;", desc : "Capital u with acute accent"}, 
	{"value":"Û", code : "&Ucirc;", hex : "&#219;", desc : "Capital u with circumflex accent"}, 
	{"value":"Ü", code : "&Uuml;", hex : "&#220;", desc : "Capital u with umlaut"}, 
	{"value":"Ý", code : "&Yacute;", hex : "&#221;", desc : "Capital y with acute accent"}, 
	{"value":"Þ", code : "&THORN;", hex : "&#222;", desc : "Capital thorn (Icelandic)"}, 
	{"value":"ß", code : "&szlig;", hex : "&#223;", desc : "Lowercase sharp s (German)"}, 
	{"value":"à", code : "&agrave;", hex : "&#224;", desc : "Lowercase a with grave accent"}, 
	{"value":"á", code : "&aacute;", hex : "&#225;", desc : "Lowercase a with acute accent"}, 
	{"value":"â", code : "&acirc;", hex : "&#226;", desc : "Lowercase a with circumflex accent"}, 
	{"value":"ã", code : "&atilde;", hex : "&#227;", desc : "Lowercase a with tilde"}, 
	{"value":"ä", code : "&auml;", hex : "&#228;", desc : "Lowercase a with umlaut"}, 
	{"value":"å", code : "&aring;", hex : "&#229;", desc : "Lowercase a with ring"}, 
	{"value":"æ", code : "&aelig;", hex : "&#230;", desc : "Lowercase ae"}, 
	{"value":"ç", code : "&ccedil;", hex : "&#231;", desc : "Lowercase c with cedilla"}, 
	{"value":"è", code : "&egrave;", hex : "&#232;", desc : "Lowercase e with grave accent"}, 
	{"value":"é", code : "&eacute;", hex : "&#233;", desc : "Lowercase e with acute accent"}, 
	{"value":"ê", code : "&ecirc;", hex : "&#234;", desc : "Lowercase e with circumflex accent"}, 
	{"value":"ë", code : "&euml;", hex : "&#235;", desc : "Lowercase e with umlaut"}, 
	{"value":"ì", code : "&igrave;", hex : "&#236;", desc : "Lowercase i with grave accent"}, 
	{"value":"í", code : "&iacute;", hex : "&#237;", desc : "Lowercase i with acute accent"}, 
	{"value":"î", code : "&icirc;", hex : "&#238;", desc : "Lowercase i with circumflex accent"}, 
	{"value":"ï", code : "&iuml;", hex : "&#239;", desc : "Lowercase i with umlaut"}, 
	{"value":"ð", code : "&eth;", hex : "&#240;", desc : "Lowercase eth (Icelandic)"}, 
	{"value":"ñ", code : "&ntilde;", hex : "&#241;", desc : "Lowercase n with tilde"}, 
	{"value":"ò", code : "&ograve;", hex : "&#242;", desc : "Lowercase o with grave accent"}, 
	{"value":"ó", code : "&oacute;", hex : "&#243;", desc : "Lowercase o with acute accent"}, 
	{"value":"ô", code : "&ocirc;", hex : "&#244;", desc : "Lowercase o with circumflex accent"}, 
	{"value":"õ", code : "&otilde;", hex : "&#245;", desc : "Lowercase o with tilde"}, 
	{"value":"ö", code : "&ouml;", hex : "&#246;", desc : "Lowercase o with umlaut"}, 
	{"value":"ø", code : "&oslash;", hex : "&#248;", desc : "Lowercase o with slash"}, 
	{"value":"ù", code : "&ugrave;", hex : "&#249;", desc : "Lowercase u with grave accent"}, 
	{"value":"ú", code : "&uacute;", hex : "&#250;", desc : "Lowercase u with acute accent"}, 
	{"value":"û", code : "&ucirc;", hex : "&#251;", desc : "Lowercase u with circumflex accent"}, 
	{"value":"ü", code : "&uuml;", hex : "&#252;", desc : "Lowercase u with umlaut"}, 
	{"value":"ý", code : "&yacute;", hex : "&#253;", desc : "Lowercase y with acute accent"}, 
	{"value":"þ", code : "&thorn;", hex : "&#254;", desc : "Lowercase thorn (Icelandic)"}, 
	{"value":"ÿ", code : "&yuml;", hex : "&#255;", desc : "Lowercase y with umlaut"}, 
	{"value":" ", code : "&nbsp;", hex : "&#160;", desc : "Non-breaking space"}, 
	{"value":"¡", code : "&iexcl;", hex : "&#161;", desc : "Inverted exclamation mark"}, 
	{"value":"¢", code : "&cent;", hex : "&#162;", desc : "Cent"}, 
	{"value":"£", code : "&pound;", hex : "&#163;", desc : "Pound"}, 
	{"value":"¤", code : "&curren;", hex : "&#164;", desc : "Currency"}, 
	{"value":"¥", code : "&yen;", hex : "&#165;", desc : "Yen"}, 
	{"value":"¦", code : "&brvbar;", hex : "&#166;", desc : "Broken vertical bar"}, 
	{"value":"§", code : "&sect;", hex : "&#167;", desc : "Section"}, 
	{"value":"¨", code : "&uml;", hex : "&#168;", desc : "Spacing diaeresis"}, 
	{"value":"©", code : "&copy;", hex : "&#169;", desc : "Copyright"}, 
	{"value":"ª", code : "&ordf;", hex : "&#170;", desc : "Feminine ordinal indicator"}, 
	{"value":"«", code : "&laquo;", hex : "&#171;", desc : "Opening/Left angle quotation mark"}, 
	{"value":"¬", code : "&not;", hex : "&#172;", desc : "Negation"}, 
	{"value":"­", code : "&shy;", hex : "&#173;", desc : "Soft hyphen"}, 
	{"value":"®", code : "&reg;", hex : "&#174;", desc : "Registered trademark"}, 
	{"value":"¯", code : "&macr;", hex : "&#175;", desc : "Spacing macron"}, 
	{"value":"°", code : "&deg;", hex : "&#176;", desc : "Degree"}, 
	{"value":"±", code : "&plusmn;", hex : "&#177;", desc : "Plus or minus"}, 
	{"value":"²", code : "&sup2;", hex : "&#178;", desc : "Superscript 2"}, 
	{"value":"³", code : "&sup3;", hex : "&#179;", desc : "Superscript 3"}, 
	{"value":"´", code : "&acute;", hex : "&#180;", desc : "Spacing acute"}, 
	{"value":"µ", code : "&micro;", hex : "&#181;", desc : "Micro"}, 
	{"value":"¶", code : "&para;", hex : "&#182;", desc : "Paragraph"}, 
	{"value":"¸", code : "&cedil;", hex : "&#184;", desc : "Spacing cedilla"}, 
	{"value":"¹", code : "&sup1;", hex : "&#185;", desc : "Superscript 1"}, 
	{"value":"º", code : "&ordm;", hex : "&#186;", desc : "Masculine ordinal indicator"}, 
	{"value":"»", code : "&raquo;", hex : "&#187;", desc : "Closing/Right angle quotation mark"}, 
	{"value":"¼", code : "&frac14;", hex : "&#188;", desc : "Fraction 1/4"}, 
	{"value":"½", code : "&frac12;", hex : "&#189;", desc : "Fraction 1/2"}, 
	{"value":"¾", code : "&frac34;", hex : "&#190;", desc : "Fraction 3/4"}, 
	{"value":"¿", code : "&iquest;", hex : "&#191;", desc : "Inverted question mark"}, 
	{"value":"×", code : "&times;", hex : "&#215;", desc : "Multiplication"}, 
	{"value":"÷", code : "&divide;", hex : "&#247;", desc : "Divide"}, 
	{"value":"∀", code : "&forall;", hex : "&#8704;", desc : "For all"}, 
	{"value":"∂", code : "&part;", hex : "&#8706;", desc : "Part"}, 
	{"value":"∃", code : "&exist;", hex : "&#8707;", desc : "Exist"}, 
	{"value":"∅", code : "&empty;", hex : "&#8709;", desc : "Empty"}, 
	{"value":"∇", code : "&nabla;", hex : "&#8711;", desc : "Nabla"}, 
	{"value":"∈", code : "&isin;", hex : "&#8712;", desc : "Is in"}, 
	{"value":"∉", code : "&notin;", hex : "&#8713;", desc : "Not in"}, 
	{"value":"∋", code : "&ni;", hex : "&#8715;", desc : "Ni"}, 
	{"value":"∏", code : "&prod;", hex : "&#8719;", desc : "Product"}, 
	{"value":"∑", code : "&sum;", hex : "&#8721;", desc : "Sum"}, 
	{"value":"−", code : "&minus;", hex : "&#8722;", desc : "Minus"}, 
	{"value":"∗", code : "&lowast;", hex : "&#8727;", desc : "Asterisk (Lowast)"}, 
	{"value":"√", code : "&radic;", hex : "&#8730;", desc : "Square root"}, 
	{"value":"∝", code : "&prop;", hex : "&#8733;", desc : "Proportional to"}, 
	{"value":"∞", code : "&infin;", hex : "&#8734;", desc : "Infinity"}, 
	{"value":"∠", code : "&ang;", hex : "&#8736;", desc : "Angle"}, 
	{"value":"∧", code : "&and;", hex : "&#8743;", desc : "And"}, 
	{"value":"∨", code : "&or;", hex : "&#8744;", desc : "Or"}, 
	{"value":"∩", code : "&cap;", hex : "&#8745;", desc : "Cap"}, 
	{"value":"∪", code : "&cup;", hex : "&#8746;", desc : "Cup"}, 
	{"value":"∫", code : "&int;", hex : "&#8747;", desc : "Integral"}, 
	{"value":"∴", code : "&there4;", hex : "&#8756;", desc : "Therefore"}, 
	{"value":"∼", code : "&sim;", hex : "&#8764;", desc : "Similar to"}, 
	{"value":"≅", code : "&cong;", hex : "&#8773;", desc : "Congurent to"}, 
	{"value":"≈", code : "&asymp;", hex : "&#8776;", desc : "Almost equal"}, 
	{"value":"≠", code : "&ne;", hex : "&#8800;", desc : "Not equal"}, 
	{"value":"≡", code : "&equiv;", hex : "&#8801;", desc : "Equivalent"}, 
	{"value":"≤", code : "&le;", hex : "&#8804;", desc : "Less or equal"}, 
	{"value":"≥", code : "&ge;", hex : "&#8805;", desc : "Greater or equal"}, 
	{"value":"⊂", code : "&sub;", hex : "&#8834;", desc : "Subset of"}, 
	{"value":"⊃", code : "&sup;", hex : "&#8835;", desc : "Superset of"}, 
	{"value":"⊄", code : "&nsub;", hex : "&#8836;", desc : "Not subset of"}, 
	{"value":"⊆", code : "&sube;", hex : "&#8838;", desc : "Subset or equal"}, 
	{"value":"⊇", code : "&supe;", hex : "&#8839;", desc : "Superset or equal"}, 
	{"value":"⊕", code : "&oplus;", hex : "&#8853;", desc : "Circled plus"}, 
	{"value":"⊗", code : "&otimes;", hex : "&#8855;", desc : "Circled times"}, 
	{"value":"⊥", code : "&perp;", hex : "&#8869;", desc : "Perpendicular"}, 
	{"value":"⋅", code : "&sdot;", hex : "&#8901;", desc : "Dot operator"}, 
	{"value":"Α", code : "&Alpha;", hex : "&#913;", desc : "Alpha"}, 
	{"value":"Β", code : "&Beta;", hex : "&#914;", desc : "Beta"}, 
	{"value":"Γ", code : "&Gamma;", hex : "&#915;", desc : "Gamma"}, 
	{"value":"Δ", code : "&Delta;", hex : "&#916;", desc : "Delta"}, 
	{"value":"Ε", code : "&Epsilon;", hex : "&#917;", desc : "Epsilon"}, 
	{"value":"Ζ", code : "&Zeta;", hex : "&#918;", desc : "Zeta"}, 
	{"value":"Η", code : "&Eta;", hex : "&#919;", desc : "Eta"}, 
	{"value":"Θ", code : "&Theta;", hex : "&#920;", desc : "Theta"}, 
	{"value":"Ι", code : "&Iota;", hex : "&#921;", desc : "Iota"}, 
	{"value":"Κ", code : "&Kappa;", hex : "&#922;", desc : "Kappa"}, 
	{"value":"Λ", code : "&Lambda;", hex : "&#923;", desc : "Lambda"}, 
	{"value":"Μ", code : "&Mu;", hex : "&#924;", desc : "Mu"}, 
	{"value":"Ν", code : "&Nu;", hex : "&#925;", desc : "Nu"}, 
	{"value":"Ξ", code : "&Xi;", hex : "&#926;", desc : "Xi"}, 
	{"value":"Ο", code : "&Omicron;", hex : "&#927;", desc : "Omicron"}, 
	{"value":"Π", code : "&Pi;", hex : "&#928;", desc : "Pi"}, 
	{"value":"Ρ", code : "&Rho;", hex : "&#929;", desc : "Rho"}, 
	{"value":"Σ", code : "&Sigma;", hex : "&#931;", desc : "Sigma"}, 
	{"value":"Τ", code : "&Tau;", hex : "&#932;", desc : "Tau"}, 
	{"value":"Υ", code : "&Upsilon;", hex : "&#933;", desc : "Upsilon"}, 
	{"value":"Φ", code : "&Phi;", hex : "&#934;", desc : "Phi"}, 
	{"value":"Χ", code : "&Chi;", hex : "&#935;", desc : "Chi"}, 
	{"value":"Ψ", code : "&Psi;", hex : "&#936;", desc : "Psi"}, 
	{"value":"Ω", code : "&Omega;", hex : "&#937;", desc : "Omega"}, 
	{"value":"α", code : "&alpha;", hex : "&#945;", desc : "alpha"}, 
	{"value":"β", code : "&beta;", hex : "&#946;", desc : "beta"}, 
	{"value":"γ", code : "&gamma;", hex : "&#947;", desc : "gamma"}, 
	{"value":"δ", code : "&delta;", hex : "&#948;", desc : "delta"}, 
	{"value":"ε", code : "&epsilon;", hex : "&#949;", desc : "epsilon"}, 
	{"value":"ζ", code : "&zeta;", hex : "&#950;", desc : "zeta"}, 
	{"value":"η", code : "&eta;", hex : "&#951;", desc : "eta"}, 
	{"value":"θ", code : "&theta;", hex : "&#952;", desc : "theta"}, 
	{"value":"ι", code : "&iota;", hex : "&#953;", desc : "iota"}, 
	{"value":"κ", code : "&kappa;", hex : "&#954;", desc : "kappa"}, 
	{"value":"λ", code : "&lambda;", hex : "&#955;", desc : "lambda"}, 
	{"value":"μ", code : "&mu;", hex : "&#956;", desc : "mu"}, 
	{"value":"ν", code : "&nu;", hex : "&#957;", desc : "nu"}, 
	{"value":"ξ", code : "&xi;", hex : "&#958;", desc : "xi"}, 
	{"value":"ο", code : "&omicron;", hex : "&#959;", desc : "omicron"}, 
	{"value":"π", code : "&pi;", hex : "&#960;", desc : "pi"}, 
	{"value":"ρ", code : "&rho;", hex : "&#961;", desc : "rho"}, 
	{"value":"ς", code : "&sigmaf;", hex : "&#962;", desc : "sigmaf"}, 
	{"value":"σ", code : "&sigma;", hex : "&#963;", desc : "sigma"}, 
	{"value":"τ", code : "&tau;", hex : "&#964;", desc : "tau"}, 
	{"value":"υ", code : "&upsilon;", hex : "&#965;", desc : "upsilon"}, 
	{"value":"φ", code : "&phi;", hex : "&#966;", desc : "phi"}, 
	{"value":"χ", code : "&chi;", hex : "&#967;", desc : "chi"}, 
	{"value":"ψ", code : "&psi;", hex : "&#968;", desc : "psi"}, 
	{"value":"ω", code : "&omega;", hex : "&#969;", desc : "omega"}, 
	{"value":"ϑ", code : "&thetasym;", hex : "&#977;", desc : "Theta symbol"}, 
	{"value":"ϒ", code : "&upsih;", hex : "&#978;", desc : "Upsilon symbol"}, 
	{"value":"ϖ", code : "&piv;", hex : "&#982;", desc : "Pi symbol"}, 
	{"value":"Œ", code : "&OElig;", hex : "&#338;", desc : "Uppercase ligature OE"}, 
	{"value":"œ", code : "&oelig;", hex : "&#339;", desc : "Lowercase ligature OE"}, 
	{"value":"Š", code : "&Scaron;", hex : "&#352;", desc : "Uppercase S with caron"}, 
	{"value":"š", code : "&scaron;", hex : "&#353;", desc : "Lowercase S with caron"}, 
	{"value":"Ÿ", code : "&Yuml;", hex : "&#376;", desc : "Capital Y with diaeres"}, 
	{"value":"ƒ", code : "&fnof;", hex : "&#402;", desc : "Lowercase with hook"}, 
	{"value":"ˆ", code : "&circ;", hex : "&#710;", desc : "Circumflex accent"}, 
	{"value":"˜", code : "&tilde;", hex : "&#732;", desc : "Tilde"}, 
	{"value":" ", code : "&ensp;", hex : "&#8194;", desc : "En space"}, 
	{"value":" ", code : "&emsp;", hex : "&#8195;", desc : "Em space"}, 
	{"value":" ", code : "&thinsp;", hex : "&#8201;", desc : "Thin space"}, 
	{"value":"‌ ", code : "&zwnj;", hex : "&#8204;", desc : "Zero width non-joiner"}, 
	{"value":" ", code : "&zwj;", hex : "&#8205;", desc : "Zero width joiner"}, 
	{"value":"‎ ", code : "&lrm;", hex : "&#8206;", desc : "Left-to-right mark"}, 
	{"value":"‏ ", code : "&rlm;", hex : "&#8207;", desc : "Right-to-left mark"}, 
	{"value":"–", code : "&ndash;", hex : "&#8211;", desc : "En dash"}, 
	{"value":"—", code : "&mdash;", hex : "&#8212;", desc : "Em dash"}, 
	{"value":"‘", code : "&lsquo;", hex : "&#8216;", desc : "Left single quotation mark"}, 
	{"value":"’", code : "&rsquo;", hex : "&#8217;", desc : "Right single quotation mark"}, 
	{"value":"‚", code : "&sbquo;", hex : "&#8218;", desc : "Single low-9 quotation mark"}, 
	{"value":"“", code : "&ldquo;", hex : "&#8220;", desc : "Left double quotation mark"}, 
	{"value":"”", code : "&rdquo;", hex : "&#8221;", desc : "Right double quotation mark"}, 
	{"value":"„", code : "&bdquo;", hex : "&#8222;", desc : "Double low-9 quotation mark"}, 
	{"value":"†", code : "&dagger;", hex : "&#8224;", desc : "Dagger"}, 
	{"value":"‡", code : "&Dagger;", hex : "&#8225;", desc : "Double dagger"}, 
	{"value":"•", code : "&bull;", hex : "&#8226;", desc : "Bullet"}, 
	{"value":"…", code : "&hellip;", hex : "&#8230;", desc : "Horizontal ellipsis"}, 
	{"value":"‰", code : "&permil;", hex : "&#8240;", desc : "Per mille"}, 
	{"value":"′", code : "&prime;", hex : "&#8242;", desc : "Minutes (Degrees)"}, 
	{"value":"″", code : "&Prime;", hex : "&#8243;", desc : "Seconds (Degrees)"}, 
	{"value":"‹", code : "&lsaquo;", hex : "&#8249;", desc : "Single left angle quotation"}, 
	{"value":"›", code : "&rsaquo;", hex : "&#8250;", desc : "Single right angle quotation"}, 
	{"value":"‾", code : "&oline;", hex : "&#8254;", desc : "Overline"}, 
	{"value":"€", code : "&euro;", hex : "&#8364;", desc : "Euro"}, 
	{"value":"™", code : "&trade;", hex : "&#8482;", desc : "Trademark"}, 
	{"value":"←", code : "&larr;", hex : "&#8592;", desc : "Left arrow"}, 
	{"value":"↑", code : "&uarr;", hex : "&#8593;", desc : "Up arrow"}, 
	{"value":"→", code : "&rarr;", hex : "&#8594;", desc : "Right arrow"}, 
	{"value":"↓", code : "&darr;", hex : "&#8595;", desc : "Down arrow"}, 
	{"value":"↔", code : "&harr;", hex : "&#8596;", desc : "Left right arrow"}, 
	{"value":"↵", code : "&crarr;", hex : "&#8629;", desc : "Carriage return arrow"}, 
	{"value":"⌈", code : "&lceil;", hex : "&#8968;", desc : "Left ceiling"}, 
	{"value":"⌉", code : "&rceil;", hex : "&#8969;", desc : "Right ceiling"}, 
	{"value":"⌊", code : "&lfloor;", hex : "&#8970;", desc : "Left floor"}, 
	{"value":"⌋", code : "&rfloor;", hex : "&#8971;", desc : "Right floor"}, 
	{"value":"◊", code : "&loz;", hex : "&#9674;", desc : "Lozenge"}, 
	{"value":"♠", code : "&spades;", hex : "&#9824;", desc : "Spade"}, 
	{"value":"♣", code : "&clubs;", hex : "&#9827;", desc : "Club"}, 
	{"value":"♥", code : "&hearts;", hex : "&#9829;", desc : "Heart"}, 
	{"value":"♦", code : "&diams;", hex : "&#9830;", desc : "Diamond"}, 
	{"value":"░", code : "&blk14;", hex : "&#9617;", desc : ""}, 
	{"value":"▒", code : "&blk12;", hex :"&#9618;", des : ""}, 
	{"value":"▓", code : "&blk34;", hex : "&#9619;", desc : ""}, 
	{"value":"█", code : "&block;", hex : "&#9608;", desc : ""}, 
	{"value":"═", code : "&boxH;", hex : "&#9552;", desc : ""}, 
	{"value":"║", code : "&boxV;", hex : "&#9553;", desc : ""}, 
	{"value":"╒", code : "&boxdR;", hex : "&#9554;", desc : ""}, 
	{"value":"╓", code : "&boxDr;", hex : "&#9555;", desc : ""}, 
	{"value":"╔", code : "&boxDR;", hex : "&#9556;", desc : ""}, 
	{"value":"╕", code : "&boxdL;", hex : "&#9557;", desc : ""}, 
	{"value":"╖", code : "&boxDl;", hex : "&#9558;", desc : ""}, 
	{"value":"╗", code : "&boxDL;", hex : "&#9559;", desc : ""}, 
	{"value":"╘", code : "&boxuR;", hex : "&#9560;", desc : ""}, 
	{"value":"╙", code : "&boxUr;", hex : "&#9561;", desc : ""}, 
	{"value":"╚", code : "&boxUR;", hex : "&#9562;", desc : ""}, 
	{"value":"╛", code : "&boxuL;", hex : "&#9563;", desc : ""}, 
	{"value":"╜", code : "&boxUl;", hex : "&#9564;", desc : ""}, 
	{"value":"╝", code : "&boxUL;", hex : "&#9565;", desc : ""}, 
	{"value":"╞", code : "&boxvR;", hex : "&#9566;", desc : ""}, 
	{"value":"╟", code : "&boxVr;", hex : "&#9567;", desc : ""}, 
	{"value":"╠", code : "&boxVR;", hex : "&#9568;", desc : ""}, 
	{"value":"╡", code : "&boxvL;", hex : "&#9569;", desc : ""}, 
	{"value":"╢", code : "&boxVl;", hex : "&#9570;", desc : ""}, 
	{"value":"╣", code : "&boxVL;", hex : "&#9571;", desc : ""}, 
	{"value":"╤", code : "&boxHd;", hex : "&#9572;", desc : ""}, 
	{"value":"╥", code : "&boxhD;", hex : "&#9573;", desc : ""}, 
	{"value":"╦", code : "&boxHD;", hex : "&#9574;", desc : ""}, 
	{"value":"╧", code : "&boxHu;", hex : "&#9575;", desc : ""}, 
	{"value":"╨", code : "&boxhU;", hex : "&#9576;", desc : ""}, 
	{"value":"╩", code : "&boxHU;", hex : "&#9577;", desc : ""}, 
	{"value":"╪", code : "&boxvH;", hex : "&#9578;", desc : ""}, 
	{"value":"╫", code : "&boxVh;", hex : "&#9579;", desc : ""}, 
	{"value":"╬", code : "&boxVH;", hex : "&#9580;", desc : ""}, 
	{"value":"⅓", code : "&frac13;", hex : "&#8531;", desc : ""}, 
	{"value":"⅔", code : "&frac23;", hex : "&#8532;", desc : ""}, 
	{"value":"⅕", code : "&frac15;", hex : "&#8533;", desc : ""}, 
	{"value":"⅖", code : "&frac25;", hex : "&#8534;", desc : ""}, 
	{"value":"⅗", code : "&frac35;", hex : "&#8535;", desc : ""}, 
	{"value":"⅘", code : "&frac45;", hex : "&#8536;", desc : ""}, 
	{"value":"⅙", code : "&frac16;", hex : "&#8537;", desc : ""}, 
	{"value":"⅚", code : "&frac56;", hex : "&#8538;", desc : ""}, 
	{"value":"⅛", code : "&frac18;", hex : "&#8539;", desc : ""}, 
	{"value":"⅜", code : "&frac38;", hex : "&#8540;", desc : ""}, 
	{"value":"⅝", code : "&frac58;", hex : "&#8541;", desc : ""}, 
	{"value":"⅞", code : "&frac78;", hex : "&#8542;", desc : ""}, 
	{"value":"‰", code : "&permil;", hex : "&#8240;", desc : ""}, 
	{"value":"‱", code : "&pertenk;", hex : "&#8241;", desc : ""}, 
	{"value":"Ё", code : "&IOcy;", hex : "&#1025;", desc : ""}, 
	{"value":"Ђ", code : "&DJcy;", hex : "&#1026;", desc : ""}, 
	{"value":"Ѓ", code : "&GJcy;", hex : "&#1027;", desc : ""}, 
	{"value":"Є", code : "&Jukcy;", hex : "&#1028;", desc : ""}, 
	{"value":"Ѕ", code : "&DScy;", hex : "&#1029;", desc : ""}, 
	{"value":"І", code : "&Iukcy;", hex : "&#1030;", desc : ""}, 
	{"value":"Ї", code : "&YIcy;", hex : "&#1031;", desc : ""}, 
	{"value":"Ј", code : "&Jsercy;", hex : "&#1032;", desc : ""}, 
	{"value":"Љ", code : "&LJcy;", hex : "&#1033;", desc : ""}, 
	{"value":"Њ", code : "&NJcy;", hex : "&#1034;", desc : ""}, 
	{"value":"Ћ", code : "&TSHcy;", hex : "&#1035;", desc : ""}, 
	{"value":"Ќ", code : "&KJcy;", hex : "&#1036;", desc : ""}, 
	{"value":"Ў", code : "&Ubrcy;", hex : "&#1038;", desc : ""}, 
	{"value":"Џ", code : "&DZcy;", hex : "&#1039;", desc : ""}, 
	{"value":"А", code : "&Acy;", hex : "&#1040;", desc : ""}, 
	{"value":"Б", code : "&Bcy;", hex : "&#1041;", desc : ""}, 
	{"value":"В", code : "&Vcy;", hex : "&#1042;", desc : ""}, 
	{"value":"Г", code : "&Gcy;", hex : "&#1043;", desc : ""}, 
	{"value":"Д", code : "&Dcy;", hex : "&#1044;", desc : ""}, 
	{"value":"Е", code : "&IEcy;", hex : "&#1045;", desc : ""}, 
	{"value":"Ж", code : "&ZHcy;", hex : "&#1046;", desc : ""}, 
	{"value":"З", code : "&Zcy;", hex : "&#1047;", desc : ""}, 
	{"value":"И", code : "&Icy;", hex : "&#1048;", desc : ""}, 
	{"value":"Й", code : "&Jcy;", hex : "&#1049;", desc : ""}, 
	{"value":"К", code : "&Kcy;", hex : "&#1050;", desc : ""}, 
	{"value":"Л", code : "&Lcy;", hex : "&#1051;", desc : ""}, 
	{"value":"М", code : "&Mcy;", hex : "&#1052;", desc : ""}, 
	{"value":"Н", code : "&Ncy;", hex : "&#1053;", desc : ""}, 
	{"value":"О", code : "&Ocy;", hex : "&#1054;", desc : ""}, 
	{"value":"П", code : "&Pcy;", hex : "&#1055;", desc : ""}, 
	{"value":"Р", code : "&Rcy;", hex : "&#1056;", desc : ""}, 
	{"value":"С", code : "&Scy;", hex : "&#1057;", desc : ""}, 
	{"value":"Т", code : "&Tcy;", hex : "&#1058;", desc : ""}, 
	{"value":"У", code : "&Ucy;", hex : "&#1059;", desc : ""}, 
	{"value":"Ф", code : "&Fcy;", hex : "&#1060;", desc : ""}, 
	{"value":"Х", code : "&KHcy;", hex : "&#1061;", desc : ""}, 
	{"value":"Ц", code : "&TScy;", hex : "&#1062;", desc : ""}, 
	{"value":"Ч", code : "&CHcy;", hex : "&#1063;", desc : ""}, 
	{"value":"Ш", code : "&SHcy;", hex : "&#1064;", desc : ""}, 
	{"value":"Щ", code : "&SHCHcy;", hex : "&#1065;", desc : ""}, 
	{"value":"Ъ", code : "&HARDcy;", hex : "&#1066;", desc : ""}, 
	{"value":"Ы", code : "&Ycy;", hex : "&#1067;", desc : ""}, 
	{"value":"Ь", code : "&SOFTcy;", hex : "&#1068;", desc : ""}, 
	{"value":"Э", code : "&Ecy;", hex : "&#1069;", desc : ""}, 
	{"value":"Ю", code : "&YUcy;", hex : "&#1070;", desc : ""}, 
	{"value":"Я", code : "&YAcy;", hex : "&#1071;", desc : ""}, 
	{"value":"а", code : "&acy;", hex : "&#1072;", desc : ""}, 
	{"value":"б", code : "&bcy;", hex : "&#1073;", desc : ""}, 
	{"value":"в", code : "&vcy;", hex : "&#1074;", desc : ""}, 
	{"value":"г", code : "&gcy;", hex : "&#1075;", desc : ""}, 
	{"value":"д", code : "&dcy;", hex : "&#1076;", desc : ""}, 
	{"value":"е", code : "&iecy;", hex : "&#1077;", desc : ""}, 
	{"value":"ж", code : "&zhcy;", hex : "&#1078;", desc : ""}, 
	{"value":"з", code : "&zcy;", hex : "&#1079;", desc : ""}, 
	{"value":"и", code : "&icy;", hex : "&#1080;", desc : ""}, 
	{"value":"й", code : "&jcy;", hex : "&#1081;", desc : ""}, 
	{"value":"к", code : "&kcy;", hex : "&#1082;", desc : ""}, 
	{"value":"л", code : "&lcy;", hex : "&#1083;", desc : ""}, 
	{"value":"м", code : "&mcy;", hex : "&#1084;", desc : ""}, 
	{"value":"н", code : "&ncy;", hex : "&#1085;", desc : ""}, 
	{"value":"о", code : "&ocy;", hex : "&#1086;", desc : ""}, 
	{"value":"п", code : "&pcy;", hex : "&#1087;", desc : ""}, 
	{"value":"р", code : "&rcy;", hex : "&#1088;", desc : ""}, 
	{"value":"с", code : "&scy;", hex : "&#1089;", desc : ""}, 
	{"value":"т", code : "&tcy;", hex : "&#1090;", desc : ""}, 
	{"value":"у", code : "&ucy;", hex : "&#1091;", desc : ""}, 
	{"value":"ф", code : "&fcy;", hex : "&#1092;", desc : ""}, 
	{"value":"х", code : "&khcy;", hex : "&#1093;", desc : ""}, 
	{"value":"ц", code : "&tscy;", hex : "&#1094;", desc : ""}, 
	{"value":"ч", code : "&chcy;", hex : "&#1095;", desc : ""}, 
	{"value":"ш", code : "&shcy;", hex : "&#1096;", desc : ""}, 
	{"value":"щ", code : "&shchcy;", hex : "&#1097;", desc : ""}, 
	{"value":"ъ", code : "&hardcy;", hex : "&#1098;", desc : ""}, 
	{"value":"ы", code : "&ycy;", hex : "&#1099;", desc : ""}, 
	{"value":"ь", code : "&softcy;", hex : "&#1100;", desc : ""}, 
	{"value":"э", code : "&ecy;", hex : "&#1101;", desc : ""}, 
	{"value":"ю", code : "&yucy;", hex : "&#1102;", desc : ""}, 
	{"value":"я", code : "&yacy;", hex : "&#1103;", desc : ""}, 
	{"value":"ё", code : "&iocy;", hex : "&#1105;", desc : ""}, 
	{"value":"ђ", code : "&djcy;", hex : "&#1106;", desc : ""}, 
	{"value":"ѓ", code : "&gjcy;", hex : "&#1107;", desc : ""}, 
	{"value":"є", code : "&jukcy;", hex : "&#1108;", desc : ""}, 
	{"value":"ѕ", code : "&dscy;", hex : "&#1109;", desc : ""}, 
	{"value":"і", code : "&iukcy;", hex : "&#1110;", desc : ""}, 
	{"value":"ї", code : "&yicy;", hex : "&#1111;", desc : ""}, 
	{"value":"ј", code : "&jsercy;", hex : "&#1112;", desc : ""}, 
	{"value":"љ", code : "&ljcy;", hex : "&#1113;", desc : ""}, 
	{"value":"њ", code : "&njcy;", hex : "&#1114;", desc : ""}, 
	{"value":"ћ", code : "&tshcy;", hex : "&#1115;", desc : ""}, 
	{"value":"ќ", code : "&kjcy;", hex : "&#1116;", desc : ""}, 
	{"value":"ў", code : "&ubrcy;", hex : "&#1118;", desc : ""}, 
	{"value":"џ", code : "&dzcy;", hex : "&#1119;", desc : ""}, 
	{"value":"[", code : "&lsqb;", hex : "&#91;", desc : ""}, 
	{"value":"\\", code : "&bsol;", hex : "&#92;", desc : ""}, 
	{"value":"]", code : "&rsqb; ", hex : "&#93;", desc : ""}, 
	{"value":"^", code : "&Hat;", hex : "&#94;", desc : ""}, 
	{"value":"_", code : "&lowbar;", hex : "&#95;", desc : ""}, 
	{"value":"`", code : "&grave;", hex : "&#96;", desc : ""}, 
	{"value":"·", code : "&middot;", hex : "&#183;", desc : ""}, 
	{"value":"·", code : "&centerdot;", hex : "&#183;", desc : ""}, 
	{"value":"º", code : "&ordm;", hex : "&#186;", desc : ""}, 
]

module.exports = {
	entities : entities, 
	decode : (text) => {
	    for (var i = 0, max = entities.length; i < max; ++i) 
	        text = text.replace(new RegExp(entities[i].code, 'g'), entities[i].value);
	    return text;
	}, 
	encode : (text) => {
		for (var i = 0, max = entities.length; i < max; ++i) 
	        text = text.replace(new RegExp(entities[i].value, 'g'), entities[i].code);
	    return text;
	}, 
	decodeLG : (text) => {
        text = text.replace(new RegExp("&lt;", 'g'), "<" );
        text = text.replace(new RegExp("&gt;", 'g'), ">" );
	    return text;
	}
}